{"version":3,"sources":["css/grid.module.css","App.js","reportWebVitals.js","index.js","css/todo.module.css"],"names":["module","exports","ListDisplay","list_items","button_text","button_cb","length","list_html","map","item","idx","item_key","toString","type","value","onClick","render_items","TodoItemForm","todo_text","change_cb","submit_cb","onSubmit","name","onChange","App","useState","todo_items","set_todo_items","done_items","set_done_items","todo_input_text","set_todo_input_text","className","style_grid","app_root","class","header_container","section","style_todo","page_title","todo_container","container","console","log","item_idx","Number","item_text","p","filter","_","done_container","input_container","e","target","preventDefault","new_item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.809bba75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_root\":\"grid_app_root__2Ukrw\",\"header_container\":\"grid_header_container__5Y49I\",\"todo_container\":\"grid_todo_container__diueP\",\"done_container\":\"grid_done_container__1PfSO\",\"input_container\":\"grid_input_container__20Lq5\",\"section\":\"grid_section__3AZVf\"};","import React from \"react\";\nimport {useState} from \"react\";\n\nimport style_grid from \"./css/grid.module.css\";\nimport style_todo from \"./css/todo.module.css\";\n\nfunction App() {\n    \n    const [ todo_items, set_todo_items ] = useState([]);\n    const [ done_items, set_done_items ] = useState([]);\n\n    const [ todo_input_text, set_todo_input_text ] = useState(\"\");\n\n    const todo_submit_handler = e =>\n    {\n        e.preventDefault ();\n\n        console.log ( `Submit: ${todo_input_text}` );\n\n        if ( todo_input_text.length < 1 )\n            return;\n\n        let new_item = todo_input_text;\n        set_todo_items  ( p => [ ...p, new_item ] );\n\n        set_todo_input_text ( \"\" );\n    };\n\n    const todo_mark_done_handler = ( item_key ) =>\n    {\n        console.log ( `Mark Done: ${item_key}` );\n\n        const item_idx = Number ( item_key );\n        const item_text = todo_items[ item_idx ];\n\n        set_todo_items ( p => p.filter ( (_, idx) => idx !== item_idx ) );\n\n        set_done_items ( p => [ item_text, ...p ] );\n    };\n\n    const delete_done_item_handler = ( item_key ) =>\n    {\n        console.log ( `Delete: ${item_key}` );\n\n        const item_idx = Number ( item_key );\n\n        set_done_items ( p => p.filter ( (_, idx) => idx !== item_idx ) );\n    };\n\n    return (\n        <div className={`${style_grid.app_root}`}>\n\n            <div class={`${style_grid.header_container} \n                         ${style_grid.section}\n                `}>\n\n                <span class={`${style_todo.page_title}`}>\n                    ToDo\n                </span>\n\n            </div>\n\n            <div class={`${style_grid.todo_container} \n                         ${style_grid.section}\n                         ${style_todo.container}\n                `}>\n                \n                <span>\n                    ToDo:\n                </span>\n\n                <ListDisplay \n                    list_items={todo_items} \n                    button_text=\"Mark as Done\"\n                    button_cb={todo_mark_done_handler}\n                />\n            </div>\n\n            <div class={`${style_grid.done_container} \n                         ${style_grid.section}\n                         ${style_todo.container}\n                `}>\n\n                <span>Done:</span>\n\n                <ListDisplay \n                    list_items={done_items} \n                    button_text=\"Delete\"\n                    button_cb={delete_done_item_handler}\n                />\n            </div>\n\n            <div class={`${style_grid.input_container} \n                         ${style_grid.section}\n                         ${style_todo.container}\n                `}>\n                <TodoItemForm \n                    todo_text={todo_input_text}\n                    change_cb={e => set_todo_input_text ( e.target.value )}\n                    submit_cb={todo_submit_handler}\n                />\n            </div>\n\n        </div>\n    );\n}\n\nconst ListDisplay = ({  list_items, button_text, button_cb }) =>\n{\n    const render_items = () =>\n    {\n        if ( list_items.length === 0 )\n            return (<p>No items.</p>);\n\n\n        const list_html = list_items.map ( (item, idx) => \n        {\n            const item_key = idx.toString();\n\n            return (\n                <li key={item_key}>\n                    {item}\n                    <input type=\"button\" \n                        value={button_text}\n                        onClick={ () => button_cb ( item_key ) }\n                    />\n                </li>\n            );\n        });\n\n        return (\n            <ol>\n                {list_html}\n            </ol>\n        );\n    }\n\n    return (\n        <div>\n            {render_items ()}\n        </div>\n    );\n\n}\n\nconst TodoItemForm = ({ todo_text, change_cb, submit_cb }) =>\n{\n    return (\n        <div>\n            <h1>Add ToDo Item:</h1>\n            <form onSubmit={submit_cb}>\n                <label>\n                    ToDo:\n                    <input type=\"text\" name=\"todo-item\"\n                        value={todo_text}\n                        onChange={change_cb}\n                    />\n                </label>\n                <input type=\"submit\" value=\"Add Item\" />\n            </form>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_title\":\"todo_page_title__1lB7N\",\"container\":\"todo_container__1sVUM\"};"],"sourceRoot":""}